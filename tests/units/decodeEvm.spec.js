import { decodePayment } from 'dist/esm'

describe('decodePayment for EVM', () => {

  it("decodes a payment pay(payment) on EVM", ()=> {
    const payment =  decodePayment({
      blockchain: 'ethereum',
      address: '0x93C946371fE3B2439a78E9572C8be6134678E54E',
      transaction: '0x422feecb000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000243cd890b58000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000001c232f01118cb8b424793ae03f870aa7d0ac7f770000000000000000000000004ecaba5870353805a9f068101a40e0f32ed605c600000000000000000000000008b277154218ccf3380cae48d630da13462e395000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000064f2fb0400000000000000000000000000000000000000000000000000000000000000e47ff36ab5000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000800000000000000000000000005ec3153bacebb5e49136cf2d457f26f5df1b67800000000000000000000000000000000000000000000000000000000064f2fb030000000000000000000000000000000000000000000000000000000000000002000000000000000000000000e91d153e0b41518a2ce8dd3d7944fa863463a97d0000000000000000000000004ecaba5870353805a9f068101a40e0f32ed605c60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000'
    })

    expect(payment.amount).toEqual(BigInt('10200000000000000'))
    expect(payment.token).toEqual('0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee')
    expect(payment.receiver).toEqual('0x08b277154218ccf3380cae48d630da13462e3950')
  })

  it("decodes a payment pay(payment) on EVM", ()=> {
    const payment =  decodePayment({
      blockchain: 'polygon',
      address: '0x673271Af8f91A44cdBA143B96ac4B63210556f91',
      transaction: '0x422feecb000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000018222b4950678000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f07a80000000000000000000000000000000000000000000000000000000000003a98000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000003fc91a3afd70395cd496c647d5a6cc9d4b2b7fad0000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa8417400000000000000000000000008b277154218ccf3380cae48d630da13462e39500000000000000000000000007b94266ca5cc36005b3043e1ffe5ebd6244947310000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000004600000000000000000000000000000000000000000000000000000000064f0781d000000000000000000000000000000000000000000000000000000000000026424856bc30000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000020b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000001821c6af7a99bd9a000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001821c6af7a99bd9a00000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b0d500b1d8e8ef31e21c99d1db9a6444d3adf12700000642791bca1f2de4661ed88a30c99a7a9449aa841740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000'
    })

    expect(payment.amount).toEqual(BigInt('1739000000000000000'))
    expect(payment.token).toEqual('0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee')
    expect(payment.receiver).toEqual('0x08b277154218ccf3380cae48d630da13462e3950')
  })
  
  it("decodes a payment pay(payment) on EVM", ()=> {
    const payment =  decodePayment({
      blockchain: 'polygon',
      address: '0x673271Af8f91A44cdBA143B96ac4B63210556f91',
      transaction: '0x422feecb000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000186a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000180c400000000000000000000000000000000000000000000000000000000000005dc000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000008b277154218ccf3380cae48d630da13462e39500000000000000000000000007b94266ca5cc36005b3043e1ffe5ebd6244947310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000064f07b740000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000'
    })

    expect(payment.amount).toEqual(BigInt('100000'))
    expect(payment.token).toEqual('0xc2132d05d31c914a87c6611c10748aeb04b58e8f')
    expect(payment.receiver).toEqual('0x08b277154218ccf3380cae48d630da13462e3950')
  })

  it("decodes a payment payment(payment,permit,signature) on EVM", ()=> {
    const payment =  decodePayment({
      blockchain: 'ethereum',
      address: '0x93C946371fE3B2439a78E9572C8be6134678E54E',
      transaction: '0x705c9b140000000000000000000000000000000000000000000000000000000000000100000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000064f321e70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035a5e6192268baf176e10e8e9eb51eaf925a8950000000000000000000000000000000000000000000000000000000064f321e70000000000000000000000000000000000000000000000000000000000000340000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000035a4e9000000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000026fe22f655303151c2ef3b2d097f842ab27ef940000000000000000000000000877a79c20028f9ef81e956b43b917703cc22a07a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000064f321e7000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000412e690353570e24929d5b6825218031fe08329553dec294e1055b353caf9c16526fb8498184be5255e9d55c9c9f1823a050833243dba1f1c67c33dfd6761363921b00000000000000000000000000000000000000000000000000000000000000'
    })

    expect(payment.amount).toEqual(BigInt('1000000000'))
    expect(payment.token).toEqual('0xdac17f958d2ee523a2206206994597c13d831ec7')
    expect(payment.receiver).toEqual('0x26fe22f655303151c2ef3b2d097f842ab27ef940')
  })

  it("decodes a payment payment(payment,permit,signature) on EVM", ()=> {
    const payment =  decodePayment({
      blockchain: 'bsc',
      address: '0xB0645B8Bb814733Dde4C4f745890f9720e8152fc',
      transaction: '0x705c9b14000000000000000000000000000000000000000000000000000000000000010000000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000064f32c650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000af7f1f3b5d169f4b996b335207c6f32577e8eb6f0000000000000000000000000000000000000000000000000000000064f32c650000000000000000000000000000000000000000000000000000000000000340000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000035a4e9000000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055d398326f99059ff775485246999027b319795500000000000000000000000026fe22f655303151c2ef3b2d097f842ab27ef940000000000000000000000000877a79c20028f9ef81e956b43b917703cc22a07a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000064f32c6500000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041f1f11b60810459d14ca1e9efd4c235cc35db86558632929a2c7c287302e320ed6f2b562a6d2d4932a35a9665a8cd8d2a3d9169074f82e2c3aa944e4519f5ece81b00000000000000000000000000000000000000000000000000000000000000'
    })

    expect(payment.amount).toEqual(BigInt('1000000000'))
    expect(payment.token).toEqual('0x55d398326f99059ff775485246999027b3197955')
    expect(payment.receiver).toEqual('0x26fe22f655303151c2ef3b2d097f842ab27ef940')
  })

  it("decodes a payment payment(payment,permit,signature) on EVM", ()=> {
    const payment =  decodePayment({
      blockchain: 'bsc',
      address: '0xB0645B8Bb814733Dde4C4f745890f9720e8152fc',
      transaction: '0x705c9b140000000000000000000000000000000000000000000000000000000000000100000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000064f32ec60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035a5e6192268baf176e10e8e9eb51eaf925a8950000000000000000000000000000000000000000000000000000000064f32ec600000000000000000000000000000000000000000000000000000000000003400000000000000000000000000000000000000000000000000000000049504f8400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000035a4e9000000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000026fe22f655303151c2ef3b2d097f842ab27ef940000000000000000000000000877a79c20028f9ef81e956b43b917703cc22a07a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000064f32ec60000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004123c9dbe1d0eacede405b48312f6cd8c0c0b94c2eeea5dcadb0959e463156536e36aba17b551bbacac4d069673ed1544236ac2837a466e5b3845448d94a48e0491b00000000000000000000000000000000000000000000000000000000000000'
    })

    expect(payment.amount).toEqual(BigInt('1230000004'))
    expect(payment.token).toEqual('0xc2132d05d31c914a87c6611c10748aeb04b58e8f')
    expect(payment.receiver).toEqual('0x26fe22f655303151c2ef3b2d097f842ab27ef940')
  })
})
